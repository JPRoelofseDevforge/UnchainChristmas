"use strict";(()=>{var e={};e.id=151,e.ids=[151],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1358:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>l});var i={};t.r(i),t.d(i,{GET:()=>u});var a=t(9303),s=t(8716),n=t(670),o=t(7070),p=t(728);async function u(e,{params:r}){try{let e=parseInt(r.id),t=await p._.party.findUnique({where:{id:e},include:{children:{include:{wishlist:!0,pledges:!0}}}});if(!t)return o.NextResponse.json({error:"Party not found"},{status:404});return o.NextResponse.json(t)}catch(e){return console.error("Error fetching party:",e),o.NextResponse.json({error:"Failed to fetch party"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/parties/[id]/route",pathname:"/api/parties/[id]",filename:"route",bundlePath:"app/api/parties/[id]/route"},resolvedPagePath:"c:\\Work\\UnchainChristmas\\src\\app\\api\\parties\\[id]\\route.ts",nextConfigOutput:"standalone",userland:i}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:h}=d,m="/api/parties/[id]/route";function x(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:l})}},728:(e,r,t)=>{t.d(r,{_:()=>a});let i=require("@prisma/client"),a=globalThis.prisma??new i.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[948,972],()=>t(1358));module.exports=i})();