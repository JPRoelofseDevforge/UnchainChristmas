// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Party {
  id          Int      @id @default(autoincrement())
  name        String
  date        DateTime
  location    String
  description String?
  children    Child[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Child {
  id          Int      @id @default(autoincrement())
  name        String
  age         Int
  partyId     Int
  party       Party    @relation(fields: [partyId], references: [id], onDelete: Cascade)
  pledged     Boolean  @default(false)
  wishlist    WishlistItem[]
  pledges     Pledge[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WishlistItem {
  id       Int    @id @default(autoincrement())
  childId  Int
  child    Child  @relation(fields: [childId], references: [id], onDelete: Cascade)
  text     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pledge {
  id             Int     @id @default(autoincrement())
  childId        Int
  child          Child   @relation(fields: [childId], references: [id], onDelete: Cascade)
  donorName      String?
  donorEmail     String?
  donorPhone     String?
  message        String?
  createdAt      DateTime @default(now())
}

model AdminUser {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
